<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flab.foodeats.shop.mapper.ShopMapper">

    <!-- 가맹점 등록 (기본)  -->
    <insert id="registerEssentialInfo" parameterType="EssentialShopInfo">
        INSERT
        INTO shop_essential_info
        VALUES(#{shopId}, #{essentialShopInfo.category}, #{essentialShopInfo.brand}, #{essentialShopInfo.location},
        #{essentialShopInfo.phone});
    </insert>
    <!-- 가맹점 수정 (기본) -->
    <update id="updateEssentialInfo" parameterType="EssentialShopInfo">
        UPDATE shop_essential_info
        SET category = #{essentialShopInfo.category}, brand = #{essentialShopInfo.brand}, location = #{essentialShopInfo.location},
        phone = #{essentialShopInfo.phone}
        WHERE shop_id = #{shopId};
    </update>
    <!-- 가맹점 삭제 (기본) -->
    <delete id="deleteEssentialInfo" parameterType="EssentialShopInfo">
        DELETE shop_essential_info, shop_convenience_info, shop_status_info
        FROM shop_essential_info
        INNER JOIN shop_convenience_info ON shop_essential_info.shop_id = shop_convenience_info.shop_id
        INNER JOIN shop_status_info ON shop_essential_info.shop_id = shop_status_info.shop_id
        WHERE shop_essential_info.shop_id = #{shopId};
    </delete>


    <!-- 가맹점 등록 (상태)  -->
    <insert id="registerStatusInfo" parameterType="StatusShopInfo">
        INSERT
        INTO shop_status_info(shop_id,open_time,close_time,closing_day)
        VALUES(#{shopId}, #{statusShopInfo.openTime}, #{statusShopInfo.closeTime},
        #{statusShopInfo.closingDay});
    </insert>
    <!-- 가맹점 수정 (상태) -->
    <update id="updateStatusInfo" parameterType="StatusShopInfo">
        UPDATE shop_status_info
        SET open_time = #{statusShopInfo.openTime}, close_time = #{statusShopInfo.closeTime}, closing_day = #{statusShopInfo.closingDay}
        WHERE shop_id = #{shopId};
    </update>


    <!-- 가맹점 등록 (편리)  -->
    <insert id="registerConvenienceInfo" parameterType="ConvenientShopInfo">
        INSERT
        INTO shop_convenience_info
        VALUES(#{shopId}, #{convenientShopInfo.grade}, #{convenientShopInfo.deliveryMethod}, #{convenientShopInfo.shopPaymentMethod});
    </insert>
    <!-- 가맹점 수정 (편리) -->
    <update id="updateConvenienceInfo" parameterType="ConvenientShopInfo">
        UPDATE shop_convenience_info
        SET grade = #{convenientShopInfo.grade}, delivery_method = #{convenientShopInfo.deliveryMethod}, shop_payment_method = #{convenientShopInfo.shopPaymentMethod}
        WHERE shop_id = #{shopId};
    </update>


    <!-- 가맹점 기본정보 조회 - 중복등록 검증 -->
    <resultMap type="Integer" id="findShopId">
        <result property="shopId" column="shop_id"/>
    </resultMap>
    <select id="findEssentialInfoByShopId" parameterType="Integer" resultMap="findShopId">
        SELECT shop_id
        FROM shop_essential_info
        WHERE shop_id = #{shopId};
    </select>
    <!-- 가맹점 상세정보 조회 - 중복등록 검증 -->
    <select id="findStatusInfoByShopId" parameterType="Integer" resultMap="findShopId">
        SELECT shop_id
        FROM shop_status_info
        WHERE shop_id = #{shopId};
    </select>
    <!-- 가맹점 편리정보 조회 - 중복등록 검증 -->
    <select id="findConvenienceInfoByShopId" parameterType="Integer" resultMap="findShopId">
        SELECT shop_id
        FROM shop_convenience_info
        WHERE shop_id = #{shopId};
    </select>


    <!-- 회원 전체 조회 -->
    <resultMap type="EssentialShopInfo" id="shopEssentialInfoMap">
        <result property="shopId" column="shop_id"/>
        <result property="category" column="category"/>
        <result property="brand" column="brand"/>
        <result property="location" column="location"/>
        <result property="phone" column="phone"/>
    </resultMap>
    <select id="shopListAllInfo" resultMap="shopEssentialInfoMap">
        SELECT *
        FROM shop_essential_info;
    </select>
</mapper>
